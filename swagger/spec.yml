openapi: 3.0.0
servers:
  - url: 'http://localhost:3000'
    description: Servidor local
info:
  version: 1.0.0-oas3
  title: Delilah Resto
  description: Proyecto 3 - rest api para pedidos de comida
tags:
  - name: usuario
    description: todos los usuarios
  - name: orden
    description: todas las ordenes
  - name: producto
    description: todos los productos

paths:
  /login:
    post:
      tags:
        - usuario
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Usuario autenticado correctamente
        '404':
          description: Usuario no exite o password incorrecto
  /usuarios:
    get:
      tags:
        - usuario
      summary: Todos los usuarios
      description: El admin recibe todos los usuarios, el cliente solo su informacion
      responses:
        '200':
          description: usuarios encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuarios'
        '404':
          description: usuarios no encontrados
    post:
      tags:
        - usuario
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario si el usuario o el mail no existen 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usuarios'
      responses:
        '200':
          description: usuario creado
        '400':
          description: Bad request
        '409':
          description: El usuario ya existe
        '500':
          description: No ingreso todos los datos
  /ordenes:
    get:
      tags:
        - orden
      summary: Todas las ordenes
      description:
        El admin puede ver todas las ordenes, el cliente solo las suyas
      responses:
        '200':
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ordenes'
        '400':
          description: Bad request
    post:
      tags:
        - orden
      summary: Nueva orden
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordenes'
      description: Crear una orden
      responses:
        '200':
          description: Orden creada
        '400':
          description: Bad request
  '/ordenes/{id}':
    put:
      tags:
        - orden
      summary: Actualizar el status de la orden
      description: Solo un admin puede actualizar el status de la orden
      parameters:
        - name: id
          in: path
          description: Id de orden para actualizar el status
          required: true
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ordenes/properties/id'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status:
                  description: Actualiza status de una orden
                  type: string
              required:
                - status
      responses:
        '200':
          description: Status de orden actualizado
        '400':
          description: Bad request
        '403':
          description: El usuario no esta autorizado para realizar esta accion
        '500':
          description: Error interno
    delete:
      tags:
        - orden
      summary: Borrar una orden
      description: Solo un admin puede borrar una orden
      parameters:
        - name: id
          in: path
          description: Id de orden para borrarla
          required: true
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ordenes/properties/id'
      responses:
        '200':
          description: orden borrada
        '400':
          description: Bad request
        '403':
          description: El usuario no esta autorizado para realizar esta accion
        '500':
          description: Error interno
  /productos:
    get:
      tags:
        - producto
      summary: Todos los productos
      description: Todos pueden ver los productos
      responses:
        '200':
          description: Operacion exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Productos'
        '400':
          description: Bad request
    post:
      tags:
        - producto
      summary: Nuevo producto
      description: Crear un nuevo producto, solo un admin puede crearlo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Productos'
      responses:
        '201':
          description: producto creado
        '400':
          description: Bad request
        '500':
          description: Asegurese de ingresar todos los datos del producto
  '/productos/{id}':
    put:
      tags:
        - producto
      summary: Actualizar un producto con el id
      description: >-
        Solo un admin puede actualizar algo del producto
      parameters:
        - name: id
          in: path
          description: Id de producto para actualizarlo
          required: true
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Productos/properties/id'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                precio:
                  description: Actualiza precio del producto
                  type: string
                name:
                  description: Actualiza nombre del producto
                  type: string
                stock:
                  description: Actualiza stock del producto
                  type: string
                image:
                  description: Actualiza imagen del producto
                  type: string
                category:
                  description: Actualiza categoria del producto
                  type: string
      responses:
        '200':
          description: producto actualizado
        '400':
          description: Bad request
        '403':
          description: El usuario no esta autorizado para realizar esta operacion
        '500':
          description: Asegurese de ingresar todos los datos para actualizar
    delete:
      tags:
        - producto
      summary: Borrar un producto con el id
      description: Solo un admin puede borrar un producto 
      parameters:
        - name: id
          in: path
          description: Id de orden para borrar un producto
          required: true
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Productos/properties/id'
      responses:
        '200':
          description: Operacion exitosa
        '400':
          description: Bad request
        '403':
          description: El usuario no esta autorizado para realizar esta operacion
        '500':
          description: Error interno
components:
  schemas:
    Login:
      type: object
      properties:
        usuario:
          type: string
        password:
          type: string
      xml:
        name: Login
    usuarios:
      type: object
      properties:
        id:
          type: integer
        usuario:
          type: string
        fullname:
          type: string
        email:
          type: string
        es_admin:
          type: boolean
        tel:
          type: string
        direccion:
          type: string
        password:
          type: string
      xml:
        name: usuarios
    ordenes:
      type: object
      properties:
        id:
          type: integer
        usuario_id:
          type: integer
        status:
          type: string
        metodo_pago:
          type: string
        update_time:
          type: string
      xml:
        name: ordenes
    Productos:
      type: object
      properties:
        id:
          type: integer
        nombre_producto:
          type: string
        stock:
          type: boolean
        img_url:
          type: string
        categoria:
          type: string
      xml:
        name: Productos